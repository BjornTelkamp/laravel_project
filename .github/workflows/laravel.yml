name: Laravel CI/CD

on:
  push:
    branches: 
      - main
      - develop  # Added for feature branches
  pull_request:
    branches: 
      - main
      - develop  # Trigger on PRs to these branches

jobs:
  laravel-ci:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2  # Updated to latest stable version
        with:
          php-version: '8.2'  # Updated to a more recent version
          extensions: mbstring, pdo_mysql, sqlite3, xml, bcmath  # Added common Laravel extensions
          tools: composer  # Ensures Composer is available

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # Install Composer dependencies
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Setup Node.js for React and Tailwind
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Matches common React/Tailwind requirements

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      # Install npm dependencies
      - name: Install npm dependencies
        run: npm install

      # Build frontend assets
      - name: Build frontend assets
        run: npm run build  # Adjust to your script (e.g., npm run production)

      # Copy .env file
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      # Generate Laravel app key
      - name: Generate key
        run: php artisan key:generate

      # Set directory permissions
      - name: Directory Permissions
        run: chmod -R 775 storage bootstrap/cache  # Adjusted to safer permissions

      # Run Laravel Pint
      - name: Run Laravel Pint
        run: ./vendor/bin/pint --test  # Checks code style; remove --test to fix

      # Setup SQLite database
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      # Run migrations
      - name: Run migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate --env=testing

      # Execute tests
      - name: Execute tests via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

      # Optional: Upload test logs on failure
      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: laravel-logs
          path: storage/logs/*.log
